% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/profilePlot.R
\name{profilePlot}
\alias{profilePlot}
\title{Make a 'profile plot' - the Diff0 values plotted against Diff1 values
 outputted from SDM profiling for unsampled cells}
\usage{
profilePlot(
  profile,
  points = TRUE,
  contours = FALSE,
  density = FALSE,
  save_plot = FALSE
)
}
\arguments{
\item{profile}{the output from \code{\link{sdmProfiling}}}

\item{points}{TRUE (default) or FALSE whether to plot the individual points}

\item{contours}{TRUE or FALSE (default) whether to plot contours of point
density}

\item{density}{TRUE or FALSE (default) whether to plot a raster of point
density (blue to red)}

\item{save_plot}{TRUE or FALSE (default) whether to save the ggplot object}
}
\value{
Automatically generates a profile plot.

 Optionally, if save_plot = TRUE will output the ggplot object.
}
\description{
Make a 'profile plot' - the Diff0 values plotted against Diff1 values
 outputted from SDM profiling for unsampled cells
}
\examples{
set.seed(9999)
envSet <- create_env_nsets(cellDims = c(100, 100),
                           sets     = c(4, 4, 3, 1),
                           model    = "Sph",
                           psill    = 1.5,
                           dep1     = 1,
                           rangeFun = function() exp(runif(1, 1, 6)),
                           propSamp = 0.25)

### generate a virtual species from the variables
sp <- create_sp(envStack = envSet,
                spFun    = "x[1] * x[5] * x[9]",
                spModel  = "Sph",
                spPsill  = 1,
                spRange  = 500,
                propSamp = 0.5,
                prev     = 0.1)

### an initial 'sample' of the species (assuming perfect detection)
sampPts <- data.frame(sampleRandom(sp$presence, 50, na.rm = TRUE, xy = TRUE))

### a formula to fit to random forest (additive for all vars + quadratics)
form <- paste0("presence ~ ", paste(names(envSet), collapse = " + "), "+ I(",
                paste(names(envSet), collapse = " ^ 2) + I("), " ^ 2)")

### run the initial model
spMod <- sdmModelling(samples = sampPts,
                      envStack = envSet,
                      modFormula = form,
                      ntrees = 500,
                      plot = FALSE)

### a random set of 500 points to profile
unsampPts <- data.frame(x = runif(500, 1, 100), y = runif(500, 1, 100))
unsampPts <- unsampPts[!paste(unsampPts$x, unsampPts$y) \%in\%
                         paste(sampPts$x, sampPts$y), ]

profile <- sdmProfiling(unsampledCoords = unsampPts,
                        sampledCoords   = sampPts,
                        origSDM         = spMod,
                        envStack        = envSet,
                        sdmFun          = "sdmModelling",
                        sdmFunArgs      = list(samples    = NULL,
                                               envStack   = envSet,
                                               modFormula = form,
                                               ntrees     = 100),
                        parallel = FALSE)

### simple plot of points
profilePlot(profile, points = TRUE, contours = FALSE, density = FALSE)

### also include a background of point density and contours
profilePlot(profile, points = TRUE, contours = TRUE, density = TRUE)

}
\author{
Charlie Marsh (charlie.marsh@mailbox.org) & Yoni Gavish
}
